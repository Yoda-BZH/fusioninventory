# {{ ansible_managed }}
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# fusioninventory agent configuration

# all commented values are examples


# Target definition options [[[
# send tasks results to an OCS server
#server = http://server.domain.com/ocsinventory
# send tasks results to a FusionInventory for GLPI server
#server = http://server.domain.com/glpi/plugins/fusioninventory/
{% if fusioninventory__agent_conf_server_url %}
server = {{ fusioninventory__agent_conf_server_url }}
{% endif %}
# write tasks results in a directory
#local = /tmp
{% if fusioninventory__agent_conf_local_dir %}
local = {{ fusioninventory__agent_conf_local_dir }}
{% endif %}

# ]]]

# Task definition options [[[
# disable software deployment tasks
#no-task = deploy
{% if fusioninventory__agent_conf_no_task %}
no-task = {{ fusioninventory__agent_conf_no_task }}
{% endif %}
#tasks = inventory,deploy,inventory
{% if fusioninventory__agent_conf_tasks %}
tasks = {{ fusioninventory__agent_conf_tasks }}
{% endif %}

# ]]]

# Target scheduling options [[[
# maximum delay before first target, in seconds
delaytime = {{ fusioninventory__agent_conf_delaytime }}
# do not contact the target before next scheduled time
lazy = 0

# ]]]

# Inventory task specific options [[[
# do not list local printers
# no-category = printer
{% if fusioninventory__agent_conf_no_category %}
no-category = {{ fusioninventory__agent_conf_no_category }}
{% endif %}
{% if fusioninventory__agent_conf_scan_homedirs %}
# allow to scan user home directories
scan-homedirs = 1
{% else %}
# disable scan of user home directories
scan-homedirs = 0
{% endif %}
{% if fusioninventory__agent_conf_scan_profiles %}
# allow to scan user profiles
scan-profiles = 1
{% else %}
# disable the scan of user profiles
scan-profiles = 0
{% endif %}
# save the inventory as HTML
html = 0
# timeout for inventory modules execution
backend-collect-timeout = 180
# always send data to server
force = 0
# additional inventory content file
additional-content =

# ]]]

# Package deployment task specific options [[[
# do not use peer to peer to download files
no-p2p = 0

# ]]]

# Network options [[[
# proxy address
proxy =
# user name for server authentication
user =
# password for server authentication
password =
# CA certificates directory
ca-cert-dir =
# CA certificates file
ca-cert-file =
{% if fusioninventory__agent_conf_no_ssl_check %}
# do not check server SSL certificate
no-ssl-check = 1
{% else %}
# check server SSL certificate
no-ssl-check = 0
{% endif %}
# connection timeout, in seconds
timeout = 180

# ]]]

# Web interface options [[[
{% if fusioninventory__agent_conf_no_httpd %}
# disable embedded web server
no-httpd = 1
{% else %}
# enable embedded web server
no-httpd = 0
{% endif %}
# network interface to listen to
httpd-ip = {{ fusioninventory__agent_conf_httpd_ip }}
# network port to listen to
httpd-port = {{ fusioninventory__agent_conf_httpd_port }}
# trust requests without authentication token
httpd-trust = {{ fusioninventory__agent_conf_httpd_trust }}

# ]]]

# Logging options [[[
# Logger backend, either Stderr, File or Syslog (Stderr)
logger = {{ fusioninventory__agent_conf_log_logger }}
{% if fusioninventory__agent_conf_log_logger == 'file' %}
# log file
logfile = {{ fusioninventory__agent_conf_log_file }}
# maximum log file size, in MB
logfile-maxsize = {{ fusioninventory__agent_conf_log_file_maxsize }}
{% endif %}
{% if fusioninventory__agent_conf_log_logger == 'syslog' %}
# Syslog facility
logfacility = {{ fusioninventory__agent_conf_log_facility }}
{% endif %}
{% if fusioninventory__agent_conf_log_color %}
# Use color in the console with stderr backend
color = 1
{% else %}
# Don't use color in the console with stderr backend
color = 0
{% endif %}

# ]]]

# Execution mode options [[[
# add given tag to inventory results
tag = {{ fusioninventory__agent_conf_tag }}
{% if fusioninventory__agent_conf_debug %}
# enable debug mode
debug = 1
{% else %}
# disable debug mode
debug = 0
{% endif %}

# time to wait to reload config (0 means no reload, it's default value)
# conf-reload-interval = 0

# ]]]

# Since 2.4, you can include all .cfg files from a folder or any given file
# For example:
#   1. file "conf.d/tag.cfg" contains "tag = 'entity123'"
#      using "include 'conf.d' will set tag to 'entity123'
#   2. file "/etc/production/glpi-tag" contains "tag = 'entity123'"
#      using "include '/etc/production/glpi-tag' will set tag to 'entity123'
# Remark:
#   1. Prefer to use full path to avoid confusion, but be aware relative paths are
#      relative against current config file folder
#   2. A parameter set in included file can be over-rided if set again after the directive
#   3. *.cfg files are read in order in folder, it's better to prefix them with a number
#   4. Package maintainers are encouraged to use this feature to avoid conflict
#      during upgrades after configuration update
#
include "conf.d/"
#include "agent.local"
